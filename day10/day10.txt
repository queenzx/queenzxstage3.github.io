第三章 NodeJs
第八天
一、query(查询)的其他用法
    1) 查询所有数据
        db.col.find({}) 

    2) 查询所有数据(只取其中name和age属性的值)
        db.emp.find({},{"name":1,"age":1})  

    3) 查询年龄为23的信息
        db.emp.find({age:23})
        或者
        db.emp.find({age:{$eq:23}})
    
    4) 查询likes中含有直播的信息
        db.emp.find({likes:"直播"})
        ** 查询数组中的某个元素,直接写数据,不要加[]

        - 查询爱好中既有直播又有写代码的信息
        db.emp.find({likes:"直播",likes:"写代码"}) --不推荐这种写法
        db.emp.find({$and:[{likes:"直播"},{likes:"写代码"}]}) --数组查询
    
    5) 对象的查询
        查询得分中html分数为70的数据
        db.emp.find({"score.html":"70"})

    6) 排序
        1表示升序,-1表示降序
        按照年龄升序排列
        db.emp.find({}).sort({age:1})
        按照年龄降序排列
        db.emp.find({}).sort({age:-1})

    7) 跳过N条数据
        db.emp.find({}).skip(2)

    8) 限制每次查询的条数
        db.emp.find({}).limit(1)

    --通常, limit和skip一起使用,来实现分页效果
        435条数据
            每一页显示20条数据 --- limit(20)
            总共有435/20+1=22页
            第一页: 1~20   --- page 1 --- (page-1)*limit+1
            第二页: 21~40  --- page 2 --- (page-1)*limit+1
            第三页: 41~60  --- page 3 --- (page-1)*limit+1

        var skip = (page-1)*limit
        eg: 显示第五页的数据
            page=5,前面有4页共80条数据
            第五页从81条开始显示,前面跳过80条数据 (page-1)*limit
        查询商品的信息,分页,每页显示20条,按照价格升序排列
        db.product.find({}).limit(20).skip(skip).sort({price:1})

练习1: 实现商品的增删改查功能
    localhost:4000显示商品列表
    产品编号  产品名称   单价   库存      操作
     1001      戴尔     4000    40    更新  下架
     1002      华为     3000    60    更新  下架
     1003      小米     2000    50    更新  下架
     1004      联想     2500    30    更新  下架
    
    进货

练习2:
    用户的注册与登录功能
    localhost:4000跳转到登录页面
    包含: 
        用户名,密码,登录按钮,注册按钮
    注册功能:
        点击注册按钮跳转到注册页面
        用户名,密码,注册按钮
        输入用户名密码,点击注册,发送注册请求
        后台接收请求,获取请求参数
            username,password
        接收到参数,查询数据库,判断用户名是否存在
        如果用户名存在,则提示用户,用户名已存在
        不存在,则将数据保存进数据库,并提示用户注册成功
    登录功能:
        输入用户名和密码,发送登录请求
        后台接收数据
            根据用户名去查询数据库
            如果没找到数据,则提示用户,用户名错误
            如果找到了数据,则判断密码是否一致
                密码不一致,则提示 密码错误
                密码一致,则提示 登录成功

