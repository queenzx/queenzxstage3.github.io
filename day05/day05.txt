第三章 NodeJs
第三天

一、案例
    访问一个页面,该页面中包含css、js和img等资源
    问题: index.html页面能看到,但是引用的css、js、图片无法正常访问
    原因:NodeJs没有根目录
    解决的方法:手动设置一个根目录(在所有的请求地址前面都拼上一个固定的文件夹路径,这个文件夹就是手动设置的根目录)

二、模块
    1)
    - 在NodeJs中,以模块为单位划分所有的功能,并提供一个完整的模块加载机制
    - 使用模块功能,可以将一个完整的应用分割成不同的部分,使代码之间的耦合度降低(耦合度:代码之间的依赖程度);
    - 不建议在一个js中写所有的复杂代码

    2)如何在一个js中使用另一个js(02.js)
        关键词:require   
    注意:
        -1)在引入时,后缀名.js可以省略不写,但是不建议
        -2)表示当前路径的./必须添加

    3)如何使用其他js中的属性或方法(03.js)
        使用关键字exports
        exports.属性名/方法名 = 属性名/方法名
        将需要给别人使用的属性或方法暴露出去
        - 可以多次使用,一个一个暴露出去

    4)如何暴露一个对象
        module.exports = 对象
        - 只能使用一次,一次性暴露出去
    注: exports和module.exports不能混用,混用,后面的会覆盖前面的

    5)如何暴露一个文件夹
        - 狭义上的模块: 一个js文件就是一个模块
        - 广义上的模块: 多个js文件相互引用,最终实现一个大的功能

        - 将封装的代码全部放到一个文件夹中,然后使用时,直接引用文件夹名称
        注意:
            被引用的文件夹中,必须包含一个index.js文件,该文件作为该文件夹模块的入口函数
            如果文件夹中没有index.js,则必须要添加一个配置文件package,用于指定入口文件
            配置文件生成 package
            -1)方法1:手动创建
                新建一个package.json
                {
                    "main":"./index1.js"
                }
            -2)方法2: npm init -y 创建
                找到被引用的文件夹,右击git bash here
                输入命令 npm init -y 自动生成(-y相当于回车)
                把生成的package.json文件里的main的值改为index1.js

        注:
            在引用自己封装的模块时,表示当前路径的./不可省略,如果省略则查找模块失败.因为node会从一个特殊的文件夹中去查找对应的模块: node_modules

            node_modules不需要在当前路径下,可以在直接父级目录下即可

    nodejs事件格式化: 下载插件(在命令行操作): npm i silly-datetime

    使用别人的模块

练习1:
    封装一个router.js,由lianxi01.js引用
    在lianxi01.js中启动http服务接收请求
    请求的处理与响应由router.js操作
        router.js暴露的三个方法:
        showIndex(),showInfo(),showErr()
        这是首页     这是信息页  这是错误页
    lianxi01.js处理以下请求:
        /       显示   这是首页
        /info   显示   这是信息页
        其他地址 显示   这是错误页

作业:
    1)复习代码块
    2)formDate方法
    3)预习formidable
